{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "DTS Config Schema",
  "definitions": {
    "node_name": {
      "type": "string",
      "description": "A unique identifier for a node"
    },
    "NIC": {
      "type": "string",
      "$ref": "#/$defs/NICs"
    },

    "ARCH": {
      "type": "string",
      "$ref": "#/$defs/node_architectures"
    },
    "OS": {
      "type": "string",
      "$ref": "#/$defs/operating_systems"
    },
    "cpu": {
      "type": "string",
      "description": "Native should be the default on x86",
      "$refs": "#/$defs/cpus"
    },
    "compiler": {
      "type": "string",
      "$ref": "#/$defs/compilers"
    },
    "build_target": {
      "type": "object",
      "description": "Targets supported by DTS",
      "properties": {
        "arch": {
          "type": "string",
          "$ref": "#/$defs/build_target_architectures"
        },
        "os": {
          "$ref": "#/definitions/OS"
        },
        "cpu": {
          "$ref": "#/definitions/cpu"
        },
        "compiler": {
          "$ref": "#/definitions/compiler"
        },
          "compiler_wrapper": {
          "type": "string",
          "description": "This will be added before compiler to the CC variable when building DPDK. Optional."
        }
      },
      "additionalProperties": false,
      "required": [
        "arch",
        "os",
        "cpu",
        "compiler"
      ]
    },
    "hugepages_2mb": {
      "type": "object",
      "description": "Optional hugepage configuration. If not specified, hugepages won't be configured and DTS will use system configuration.",
      "properties": {
        "number_of": {
          "type": "integer",
          "description": "The number of hugepages to configure. Hugepage size will be the system default."
        },
        "force_first_numa": {
          "type": "boolean",
          "description": "Set to True to force configuring hugepages on the first NUMA node. Defaults to False."
        }
      },
      "additionalProperties": false,
      "required": [
        "number_of"
      ]
    },
    "mac_address": {
      "type": "string",
      "description": "A MAC address",
      "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
    },
    "pci_address": {
      "type": "string",
      "pattern": "^[\\da-fA-F]{4}:[\\da-fA-F]{2}:[\\da-fA-F]{2}.\\d:?\\w*$"
    },
    "port_peer_address": {
      "description": "Peer is a TRex port, and IXIA port or a PCI address",
      "oneOf": [
        {
          "description": "PCI peer port",
          "$ref": "#/definitions/pci_address"
        }
      ]
    },
    "test_suite": {
      "type": "string",
      "$ref": "#/$defs/test_suites"
    },
    "test_target": {
      "type": "object",
      "properties": {
        "suite": {
          "$ref": "#/definitions/test_suite"
        },
        "cases": {
          "type": "array",
          "description": "If specified, only this subset of test suite's test cases will be run.",
          "items": {
            "type": "string"
          },
          "minimum": 1
        }
      },
      "required": [
        "suite"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "properties": {
    "nodes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A unique identifier for this node"
          },
          "hostname": {
            "type": "string",
            "description": "A hostname from which the node running DTS can access this node. This can also be an IP address."
          },
          "user": {
            "type": "string",
            "description": "The user to access this node with."
          },
          "password": {
            "type": "string",
            "description": "The password to use on this node. Use only as a last resort. SSH keys are STRONGLY preferred."
          },
          "arch": {
            "$ref": "#/definitions/ARCH"
          },
          "os": {
            "$ref": "#/definitions/OS"
          },
          "lcores": {
            "type": "string",
            "pattern": "^(([0-9]+|([0-9]+-[0-9]+))(,([0-9]+|([0-9]+-[0-9]+)))*)?$",
            "description": "Optional comma-separated list of logical cores to use, e.g.: 1,2,3,4,5,18-22. Defaults to 1. An empty string means use all lcores."
          },
          "use_first_core": {
            "type": "boolean",
            "description": "Indicate whether DPDK should use the first physical core. It won't be used by default."
          },
          "memory_channels": {
            "type": "integer",
            "description": "How many memory channels to use. Optional, defaults to 1."
          },
          "hugepages_2mb": {
            "$ref": "#/definitions/hugepages_2mb"
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Each port should be described on both sides of the connection. This makes configuration slightly more verbose but greatly simplifies implementation. If there are inconsistencies, then DTS will not run until that issue is fixed. An example inconsistency would be port 1, node 1 says it is connected to port 1, node 2, but port 1, node 2 says it is connected to port 2, node 1.",
              "properties": {
                "pci": {
                  "$ref": "#/definitions/pci_address",
                  "description": "The local PCI address of the port"
                },
                "os_driver_for_dpdk": {
                  "type": "string",
                  "description": "The driver that the kernel should bind this device to for DPDK to use it. (ex: vfio-pci)"
                },
                "os_driver": {
                  "type": "string",
                  "description": "The driver normally used by this port (ex: i40e)"
                },
                "peer_node": {
                  "type": "string",
                  "description": "The name of the node the peer port is on"
                },
                "peer_pci": {
                  "$ref": "#/definitions/pci_address",
                  "description": "The PCI address of the peer port"
                }
              },
              "additionalProperties": false,
              "required": [
                "pci",
                "os_driver_for_dpdk",
                "os_driver",
                "peer_node",
                "peer_pci"
              ]
            },
            "minimum": 1
          },
          "traffic_generator": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "$ref": "#/$defs/traffic_generators"
                  }
                }
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "hostname",
          "user",
          "arch",
          "os"
        ]
      },
      "minimum": 1
    },
    "test_runs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "build_targets": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/build_target"
            },
            "minimum": 1
          },
          "perf": {
            "type": "boolean",
            "description": "Enable performance testing."
          },
          "func": {
            "type": "boolean",
            "description": "Enable functional testing."
          },
          "test_suites": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/definitions/test_suite"
                },
                {
                  "$ref": "#/definitions/test_target"
                }
              ]
            }
          },
          "skip_smoke_tests": {
            "description": "Optional field that allows you to skip smoke testing",
            "type": "boolean"
          },
          "system_under_test_node": {
            "type":"object",
            "properties": {
              "node_name": {
                "$ref": "#/definitions/node_name"
              },
              "vdevs": {
                "description": "Optional list of names of vdevs to be used in the test run",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "node_name"
            ]
          },
          "traffic_generator_node": {
            "$ref": "#/definitions/node_name"
          }
        },
        "additionalProperties": false,
        "required": [
          "build_targets",
          "perf",
          "func",
          "test_suites",
          "system_under_test_node",
          "traffic_generator_node"
        ]
      },
      "minimum": 1
    }
  },
  "required": [
    "test_runs",
    "nodes"
  ],
  "additionalProperties": false
}
