/* SPDX-License-Identifier: BSD-3-Clause
 * Copyright(c) 2015-2025 Intel Corporation
 */

#ifndef TEST_CRYPTODEV_SNOW_V_TEST_VECTORS_H_
#define TEST_CRYPTODEV_SNOW_V_TEST_VECTORS_H_

struct snow_v_test_data {
	struct {
		uint8_t data[64];
		unsigned int len;
	} key;

	struct {
		alignas(16) uint8_t data[64];
		unsigned int len;
	} cipher_iv;

	struct {
		uint8_t data[1024];
		unsigned int len; /* length must be in Bits */
	} plaintext;

	struct {
		uint8_t data[1024];
		unsigned int len; /* length must be in Bits */
	} ciphertext;
};

struct snow_v_test_data snow_v_test_case_1 = {
	.key = {
		.data = {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		},
		.len = 32
	},
	.cipher_iv = {
		.data = {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		},
		.len = 1024
	},
	.ciphertext = {
		.data = {
			0x69, 0xca, 0x6d, 0xaf, 0x9a, 0xe3, 0xb7, 0x2d,
			0xb1, 0x34, 0xa8, 0x5a, 0x83, 0x7e, 0x41, 0x9d,
			0xec, 0x08, 0xaa, 0xd3, 0x9d, 0x7b, 0x0f, 0x00,
			0x9b, 0x60, 0xb2, 0x8c, 0x53, 0x43, 0x00, 0xed,
			0x84, 0xab, 0xf5, 0x94, 0xfb, 0x08, 0xa7, 0xf1,
			0xf3, 0xa2, 0xdf, 0x18, 0xe6, 0x17, 0x68, 0x3b,
			0x48, 0x1f, 0xa3, 0x78, 0x07, 0x9d, 0xcf, 0x04,
			0xdb, 0x53, 0xb5, 0xd6, 0x29, 0xa9, 0xeb, 0x9d,
			0x03, 0x1c, 0x15, 0x9d, 0xcc, 0xd0, 0xa5, 0x0c,
			0x4d, 0x5d, 0xbf, 0x51, 0x15, 0xd8, 0x70, 0x39,
			0xc0, 0xd0, 0x3c, 0xa1, 0x37, 0x0c, 0x19, 0x40,
			0x03, 0x47, 0xa0, 0xb4, 0xd2, 0xe9, 0xdb, 0xe5,
			0xcb, 0xca, 0x60, 0x82, 0x14, 0xa2, 0x65, 0x82,
			0xcf, 0x68, 0x09, 0x16, 0xb3, 0x45, 0x13, 0x21,
			0x95, 0x4f, 0xdf, 0x30, 0x84, 0xaf, 0x02, 0xf6,
			0xa8, 0xe2, 0x48, 0x1d, 0xe6, 0xbf, 0x82, 0x79
		},
		.len = 1024
	},
};

struct snow_v_test_data snow_v_test_case_2 = {
	.key = {
		.data = {
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
		},
		.len = 32
	},
	.cipher_iv = {
		.data = {
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
			0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		},
		.len = 1024
	},
	.ciphertext = {
		.data = {
			0x30, 0x76, 0x09, 0xfb, 0x10, 0x10, 0x12, 0x54,
			0x4b, 0xc1, 0x75, 0xe3, 0x17, 0xfb, 0x25, 0xff,
			0x33, 0x0d, 0x0d, 0xe2, 0x5a, 0xf6, 0xaa, 0xd1,
			0x05, 0x05, 0xb8, 0x9b, 0x1e, 0x09, 0xa8, 0xec,
			0xdd, 0x46, 0x72, 0xcc, 0xbb, 0x98, 0xc7, 0xf2,
			0xc4, 0xe2, 0x4a, 0xf5, 0x27, 0x28, 0x36, 0xc8,
			0x7c, 0xc7, 0x3a, 0x81, 0x76, 0xb3, 0x9c, 0xe9,
			0x30, 0x3b, 0x3e, 0x76, 0x4e, 0x9b, 0xe3, 0xe7,
			0x48, 0xf7, 0x65, 0x1a, 0x7c, 0x7e, 0x81, 0x3f,
			0xd5, 0x24, 0x90, 0x23, 0x1e, 0x56, 0xf7, 0xc1,
			0x44, 0xe4, 0x38, 0xe7, 0x77, 0x11, 0xa6, 0xb0,
			0xba, 0xfb, 0x60, 0x45, 0x0c, 0x62, 0xd7, 0xd9,
			0xb9, 0x24, 0x1d, 0x12, 0x44, 0xfc, 0xb4, 0x9d,
			0xa1, 0xe5, 0x2b, 0x80, 0x13, 0xde, 0xcd, 0xd4,
			0x86, 0x04, 0xff, 0xfc, 0x62, 0x67, 0x6e, 0x70,
			0x3b, 0x3a, 0xb8, 0x49, 0xcb, 0xa6, 0xea, 0x09
		},
		.len = 1024
	},
};

struct snow_v_test_data snow_v_test_case_3 = {
	.key = {
		.data = {
			0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
			0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
			0x0a, 0x1a, 0x2a, 0x3a, 0x4a, 0x5a, 0x6a, 0x7a,
			0x8a, 0x9a, 0xaa, 0xba, 0xca, 0xda, 0xea, 0xfa
		},
		.len = 32
	},
	.cipher_iv = {
		.data = {
			0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
			0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10
		},
		.len = 16
	},
	.plaintext = {
		.data = {
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
		},
		.len = 1024
	},
	.ciphertext = {
		.data = {
			0xaa, 0x81, 0xea, 0xfb, 0x8b, 0x86, 0x16, 0xce,
			0x3e, 0x5c, 0xe2, 0x22, 0x24, 0x61, 0xc5, 0x0a,
			0x6a, 0xb4, 0x48, 0x77, 0x56, 0xde, 0x4b, 0xd3,
			0x1c, 0x90, 0x4f, 0x3d, 0x97, 0x8a, 0xfe, 0x56,
			0x33, 0x4f, 0x10, 0xdd, 0xdf, 0x2b, 0x95, 0x31,
			0x76, 0x9a, 0x71, 0x05, 0x0b, 0xe4, 0x38, 0x5f,
			0xc2, 0xb6, 0x19, 0x2c, 0x7a, 0x85, 0x7b, 0xe8,
			0xb4, 0xfc, 0x28, 0xb7, 0x09, 0xf0, 0x8f, 0x11,
			0xf2, 0x06, 0x49, 0xe2, 0xee, 0xf2, 0x49, 0x80,
			0xf8, 0x6c, 0x4c, 0x11, 0x36, 0x41, 0xfe, 0xd2,
			0xf3, 0xf6, 0xfa, 0x2b, 0x91, 0x95, 0x12, 0x06,
			0xb8, 0x01, 0xdb, 0x15, 0x46, 0x65, 0x17, 0xa6,
			0x33, 0x0a, 0xdd, 0xa6, 0xb3, 0x5b, 0x26, 0x5e,
			0xfd, 0x72, 0x2e, 0x86, 0x77, 0xb4, 0x8b, 0xfc,
			0x15, 0xb4, 0x41, 0x18, 0xde, 0x52, 0xd0, 0x73,
			0xb0, 0xad, 0x0f, 0xe7, 0x59, 0x4d, 0x62, 0x91
		},
		.len = 1024
	},
};

#endif /* TEST_CRYPTODEV_SNOW_V_TEST_VECTORS_H_ */
