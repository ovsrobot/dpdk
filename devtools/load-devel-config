# SPDX-License-Identifier: BSD-3-Clause
# vim: ft=sh

# This file is intended to be sourced into shell

# Load DPDK devel config and allow override
# from system file
test ! -r /etc/dpdk/devel.config ||
        . /etc/dpdk/devel.config
# from user file
test ! -r ~/.config/dpdk/devel.config ||
        . ~/.config/dpdk/devel.config
# from local file
test ! -r $(dirname $(readlink -f $0))/../.develconfig ||
        . $(dirname $(readlink -f $0))/../.develconfig

# The config files must export variables in the shell style

# This function is called to download missing scripts by subcommands
#
# Example:
#   download_script DPDK_CHECKPATCH_PATH \
#       https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl
download_script() { # <var_name> <url>
	var_name=$1
	url=$2

	script_name=$(basename "$url")
	git_dir=$(git rev-parse --git-dir) || return 1
	dl_path="$git_dir/$script_name"

	if [ -f "$dl_path" ] && [ -x "$dl_path" ]; then
		eval "$var_name='$dl_path'"
		return 0
	fi

	if ! [ -t 0 ]; then
		# not in an interactive terminal, abort
		return 1
	fi
	prompt="Download $url and set $var_name=$dl_path? [y/n] "

	while printf '%s' "$prompt" && read y && ! [ "$y" = y ]; do
		if [ "$y" = n ]; then
			return 1
		fi
	done

	if which curl >/dev/null 2>&1; then
		curl -Lo "$dl_path" "$url" || return 1
	elif which wget >/dev/null 2>&1; then
		wget -O "$dl_path" "$url" || return 1
	else
		echo "error: neither curl nor wget are available." >&2
		return 1
	fi
	chmod 755 "$dl_path" || return 1

	eval "$var_name='$dl_path'"
	return 0
}
