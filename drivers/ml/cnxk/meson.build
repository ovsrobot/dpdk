# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022 Marvell.

if not is_linux or not dpdk_conf.get('RTE_ARCH_64')
    build = false
    reason = 'only supported on 64-bit Linux'
    subdir_done()
endif

enable_mvtvm = true

if not libarchive.found()
        message('drivers/ml/cnxk: libarchive not found')
        enable_mvtvm = false
endif

if not jansson_dep.found()
        message('drivers/ml/cnxk: jansson not found')
        enable_mvtvm = false
endif

if not cc.check_header('dlpack/dlpack.h')
        message('drivers/ml/cnxk: dlpack.h not found')
        enable_mvtvm = false
endif

tvmrt_lib = cc.find_library('tvm_runtime', required: false)
if tvmrt_lib.found()
        tvmrt_dep = declare_dependency(dependencies: tvmrt_lib)
else
        message('drivers/ml/cnxk: tvm_runtime not found')
        enable_mvtvm = false
endif

tvmdp_dep = dependency('tvmdp', required: false)
if not tvmdp_dep.found()
        message('drivers/ml/cnxk: tvmdp not found')
        enable_mvtvm = false
endif

driver_sdk_headers = files(
        'cn10k_ml_dev.h',
        'cn10k_ml_ops.h',
        'cn10k_ml_model.h',
        'cn10k_ml_ocm.h',
        'cnxk_ml_dev.h',
        'cnxk_ml_io.h',
        'cnxk_ml_model.h',
        'cnxk_ml_ops.h',
        'cnxk_ml_xstats.h',
        'cnxk_ml_utils.h',
)

sources = files(
        'cn10k_ml_dev.c',
        'cn10k_ml_ops.c',
        'cn10k_ml_model.c',
        'cn10k_ml_ocm.c',
        'cnxk_ml_dev.c',
        'cnxk_ml_io.c',
        'cnxk_ml_model.c',
        'cnxk_ml_ops.c',
        'cnxk_ml_utils.c',
)

deps += ['mldev', 'common_cnxk', 'kvargs', 'hash']

if enable_mvtvm

dpdk_conf.set('RTE_MLDEV_CNXK_ENABLE_MVTVM', 1)

driver_sdk_headers += files(
        'mvtvm_ml_ops.h',
        'mvtvm_ml_model.h',
)

sources += files(
        'mvtvm_ml_ops.c',
        'mvtvm_ml_model.c',
)

ext_deps += tvmrt_dep
ext_deps += tvmdp_dep
ext_deps += cc.find_library('stdc++', required: true)
ext_deps += jansson_dep

deps += ['bus_vdev']

message('drivers/ml/cnxk: Enabled TVM model support')
else
message('drivers/ml/cnxk: Disabled TVM model support')

driver_sdk_headers += files(
        'mvtvm_ml_stubs.h',
)

sources += files(
        'mvtvm_ml_stubs.c',
)

endif

require_iova_in_mbuf = false

if get_option('buildtype').contains('debug')
        cflags += [ '-DCNXK_ML_DEV_DEBUG' ]
else
        cflags += [ '-UCNXK_ML_DEV_DEBUG' ]
endif
