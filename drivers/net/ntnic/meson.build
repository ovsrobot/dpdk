# SPDX-License-Identifier: BSD-3-Clause
# Copyright(c) 2020-2023 Napatech A/S

# includes
includes = [
    include_directories('.'),
    include_directories('adapter'),
    include_directories('include'),
    include_directories('nim'),
    include_directories('ntlog/include'),
    include_directories('ntutil/include'),
    include_directories('nthw'),
    include_directories('nthw/core'),
    include_directories('nthw/supported'),
    include_directories('nthw/flow_api'),
    include_directories('nthw/flow_filter'),
    include_directories('sensors'),
    include_directories('sensors/avr_sensors'),
    include_directories('sensors/board_sensors'),
    include_directories('sensors/nim_sensors'),
    include_directories('sensors/ntavr'),
]

# all sources
sources = files(
    'adapter/nt4ga_adapter.c',
    'adapter/nt4ga_link.c',
    'adapter/nt4ga_link_100g.c',
    'adapter/nt4ga_pci_ta_tg.c',
    'adapter/nt4ga_stat.c',
    'nim/i2c_nim.c',
    'nim/nt_link_speed.c',
    'nim/qsfp_sensors.c',
    'nim/sfp_sensors.c',
    'nthw/core/nthw_clock_profiles.c',
    'nthw/core/nthw_fpga.c',
    'nthw/core/nthw_fpga_nt200a0x.c',
    'nthw/core/nthw_fpga_rst.c',
    'nthw/core/nthw_fpga_rst9563.c',
    'nthw/core/nthw_fpga_rst_nt200a0x.c',
    'nthw/core/nthw_gmf.c',
    'nthw/core/nthw_gpio_phy.c',
    'nthw/core/nthw_hif.c',
    'nthw/core/nthw_iic.c',
    'nthw/core/nthw_mac_pcs.c',
    'nthw/core/nthw_mac_pcs_xxv.c',
    'nthw/core/nthw_pci_rd_tg.c',
    'nthw/core/nthw_pci_ta.c',
    'nthw/core/nthw_pci_wr_tg.c',
    'nthw/core/nthw_pcie3.c',
    'nthw/core/nthw_rmc.c',
    'nthw/core/nthw_sdc.c',
    'nthw/core/nthw_si5340.c',
    'nthw/core/nthw_spi_v3.c',
    'nthw/core/nthw_spim.c',
    'nthw/core/nthw_spis.c',
    'nthw/core/nthw_tsm.c',
    'nthw/flow_api/flow_api.c',
    'nthw/flow_api/flow_api_actions.c',
    'nthw/flow_api/flow_api_backend.c',
    'nthw/flow_api/flow_api_profile_inline.c',
    'nthw/flow_api/flow_engine/flow_group.c',
    'nthw/flow_api/flow_engine/flow_hasher.c',
    'nthw/flow_api/flow_engine/flow_kcc.c',
    'nthw/flow_api/flow_engine/flow_km.c',
    'nthw/flow_api/flow_engine/flow_tunnel.c',
    'nthw/flow_api/hw_mod/hw_mod_cat.c',
    'nthw/flow_api/hw_mod/hw_mod_flm.c',
    'nthw/flow_api/hw_mod/hw_mod_hsh.c',
    'nthw/flow_api/hw_mod/hw_mod_hst.c',
    'nthw/flow_api/hw_mod/hw_mod_ioa.c',
    'nthw/flow_api/hw_mod/hw_mod_km.c',
    'nthw/flow_api/hw_mod/hw_mod_pdb.c',
    'nthw/flow_api/hw_mod/hw_mod_qsl.c',
    'nthw/flow_api/hw_mod/hw_mod_rmc.c',
    'nthw/flow_api/hw_mod/hw_mod_roa.c',
    'nthw/flow_api/hw_mod/hw_mod_slc.c',
    'nthw/flow_api/hw_mod/hw_mod_slc_lr.c',
    'nthw/flow_api/hw_mod/hw_mod_tpe.c',
    'nthw/flow_filter/flow_backend.c',
    'nthw/flow_filter/flow_filter.c',
    'nthw/flow_filter/flow_nthw_cat.c',
    'nthw/flow_filter/flow_nthw_csu.c',
    'nthw/flow_filter/flow_nthw_flm.c',
    'nthw/flow_filter/flow_nthw_hfu.c',
    'nthw/flow_filter/flow_nthw_hsh.c',
    'nthw/flow_filter/flow_nthw_hst.c',
    'nthw/flow_filter/flow_nthw_ifr.c',
    'nthw/flow_filter/flow_nthw_info.c',
    'nthw/flow_filter/flow_nthw_ioa.c',
    'nthw/flow_filter/flow_nthw_km.c',
    'nthw/flow_filter/flow_nthw_pdb.c',
    'nthw/flow_filter/flow_nthw_qsl.c',
    'nthw/flow_filter/flow_nthw_rmc.c',
    'nthw/flow_filter/flow_nthw_roa.c',
    'nthw/flow_filter/flow_nthw_rpp_lr.c',
    'nthw/flow_filter/flow_nthw_slc.c',
    'nthw/flow_filter/flow_nthw_slc_lr.c',
    'nthw/flow_filter/flow_nthw_tx_cpy.c',
    'nthw/flow_filter/flow_nthw_tx_ins.c',
    'nthw/flow_filter/flow_nthw_tx_rpl.c',
    'nthw/nthw_fpga_model.c',
    'nthw/nthw_dbs.c',
    'nthw/nthw_epp.c',
    'nthw/nthw_platform.c',
    'nthw/nthw_rac.c',
    'nthw/nthw_stat.c',
    'nthw/supported/nthw_fpga_9563_055_024_0000.c',
    'ntlog/ntlog.c',
    'ntutil/nt_util.c',
    'sensors/avr_sensors/avr_sensors.c',
    'sensors/board_sensors/board_sensors.c',
    'sensors/board_sensors/tempmon.c',
    'sensors/nim_sensors/nim_sensors.c',
    'sensors/ntavr/ntavr.c',
    'sensors/sensors.c',
)

if is_variable('default_cflags')
      cflags += default_cflags
else
      cflags += machine_args
      cflags += ['-DALLOW_INTERNAL_API']
endif

# END
