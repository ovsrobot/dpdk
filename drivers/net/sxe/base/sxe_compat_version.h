/* SPDX-License-Identifier: BSD-3-Clause
 * Copyright (C), 2022, Linkdata Technology Co., Ltd.
 */

#ifndef __SXE_COMPAT_VERSION_H__
#define __SXE_COMPAT_VERSION_H__

#include <stdbool.h>
#include "sxe_dpdk_version.h"

struct rte_eth_dev;
enum rte_eth_event_type;

int sxe_eth_dev_callback_process(struct rte_eth_dev *dev,
	enum rte_eth_event_type event, void *ret_param);

#ifdef DPDK_19_11_6
#define ETH_DEV_OPS_HAS_DESC_RELATE

#define __rte_cold __attribute__((cold))

#define ETH_SPEED_NUM_UNKNOWN UINT32_MAX
#ifdef RTE_ARCH_ARM64
#define RTE_ARCH_ARM
#endif

#else

#define SET_AUTOFILL_QUEUE_XSTATS
#define PCI_REG_WC_WRITE

#endif

#ifndef PCI_REG_WC_WRITE
#define rte_write32_wc rte_write32
#define rte_write32_wc_relaxed rte_write32_relaxed
#endif

#if defined DPDK_20_11_5 || defined DPDK_19_11_6
#define RTE_LOG_REGISTER_SUFFIX RTE_LOG_REGISTER

#define	RTE_ETH_RSS_IPV4				ETH_RSS_IPV4
#define	RTE_ETH_RSS_NONFRAG_IPV4_TCP	ETH_RSS_NONFRAG_IPV4_TCP
#define	RTE_ETH_RSS_NONFRAG_IPV4_UDP	ETH_RSS_NONFRAG_IPV4_UDP
#define	RTE_ETH_RSS_IPV6				ETH_RSS_IPV6
#define	RTE_ETH_RSS_NONFRAG_IPV6_TCP	ETH_RSS_NONFRAG_IPV6_TCP
#define	RTE_ETH_RSS_NONFRAG_IPV6_UDP	ETH_RSS_NONFRAG_IPV6_UDP
#define	RTE_ETH_RSS_IPV6_EX			 ETH_RSS_IPV6_EX
#define	RTE_ETH_RSS_IPV6_TCP_EX		 ETH_RSS_IPV6_TCP_EX
#define	RTE_ETH_RSS_IPV6_UDP_EX		 ETH_RSS_IPV6_UDP_EX


#define	RTE_ETH_VLAN_TYPE_UNKNOWN	   ETH_VLAN_TYPE_UNKNOWN
#define	RTE_ETH_VLAN_TYPE_INNER		 ETH_VLAN_TYPE_INNER
#define	RTE_ETH_VLAN_TYPE_OUTER		 ETH_VLAN_TYPE_OUTER
#define	RTE_ETH_VLAN_TYPE_MAX		   ETH_VLAN_TYPE_MAX


#define	RTE_ETH_8_POOLS		ETH_8_POOLS
#define	RTE_ETH_16_POOLS	   ETH_16_POOLS
#define	RTE_ETH_32_POOLS	   ETH_32_POOLS
#define	RTE_ETH_64_POOLS	   ETH_64_POOLS


#define RTE_ETH_4_TCS	   ETH_4_TCS
#define RTE_ETH_8_TCS	   ETH_8_TCS


#define RTE_ETH_MQ_RX_NONE		  ETH_MQ_RX_NONE
#define RTE_ETH_MQ_RX_RSS		   ETH_MQ_RX_RSS
#define RTE_ETH_MQ_RX_DCB		   ETH_MQ_RX_DCB
#define RTE_ETH_MQ_RX_DCB_RSS	   ETH_MQ_RX_DCB_RSS
#define RTE_ETH_MQ_RX_VMDQ_ONLY	 ETH_MQ_RX_VMDQ_ONLY
#define RTE_ETH_MQ_RX_VMDQ_RSS	  ETH_MQ_RX_VMDQ_RSS
#define RTE_ETH_MQ_RX_VMDQ_DCB	  ETH_MQ_RX_VMDQ_DCB
#define RTE_ETH_MQ_RX_VMDQ_DCB_RSS  ETH_MQ_RX_VMDQ_DCB_RSS


#define RTE_ETH_MQ_TX_NONE		  ETH_MQ_TX_NONE
#define RTE_ETH_MQ_TX_DCB		   ETH_MQ_TX_DCB
#define RTE_ETH_MQ_TX_VMDQ_DCB	  ETH_MQ_TX_VMDQ_DCB
#define RTE_ETH_MQ_TX_VMDQ_ONLY	 ETH_MQ_TX_VMDQ_ONLY


#define RTE_ETH_FC_NONE		 RTE_FC_NONE
#define RTE_ETH_FC_RX_PAUSE	 RTE_FC_RX_PAUSE
#define RTE_ETH_FC_TX_PAUSE	 RTE_FC_TX_PAUSE
#define RTE_ETH_FC_FULL		 RTE_FC_FULL


#define RTE_ETH_MQ_RX_RSS_FLAG	  ETH_MQ_RX_RSS_FLAG
#define RTE_ETH_MQ_RX_DCB_FLAG	  ETH_MQ_RX_DCB_FLAG
#define RTE_ETH_MQ_RX_VMDQ_FLAG	 ETH_MQ_RX_VMDQ_FLAG


#define RTE_ETH_RX_OFFLOAD_VLAN_STRIP	   DEV_RX_OFFLOAD_VLAN_STRIP
#define RTE_ETH_RX_OFFLOAD_IPV4_CKSUM	   DEV_RX_OFFLOAD_IPV4_CKSUM
#define RTE_ETH_RX_OFFLOAD_UDP_CKSUM		DEV_RX_OFFLOAD_UDP_CKSUM
#define RTE_ETH_RX_OFFLOAD_TCP_CKSUM		DEV_RX_OFFLOAD_TCP_CKSUM
#define RTE_ETH_RX_OFFLOAD_TCP_LRO		  DEV_RX_OFFLOAD_TCP_LRO
#define RTE_ETH_RX_OFFLOAD_QINQ_STRIP	   DEV_RX_OFFLOAD_QINQ_STRIP
#define RTE_ETH_RX_OFFLOAD_OUTER_IPV4_CKSUM DEV_RX_OFFLOAD_OUTER_IPV4_CKSUM
#define RTE_ETH_RX_OFFLOAD_MACSEC_STRIP	 DEV_RX_OFFLOAD_MACSEC_STRIP
#define RTE_ETH_RX_OFFLOAD_VLAN_FILTER	  DEV_RX_OFFLOAD_VLAN_FILTER
#define RTE_ETH_RX_OFFLOAD_VLAN_EXTEND	  DEV_RX_OFFLOAD_VLAN_EXTEND
#define RTE_ETH_RX_OFFLOAD_SCATTER		  DEV_RX_OFFLOAD_SCATTER
#define RTE_ETH_RX_OFFLOAD_TIMESTAMP		DEV_RX_OFFLOAD_TIMESTAMP
#define RTE_ETH_RX_OFFLOAD_SECURITY		 DEV_RX_OFFLOAD_SECURITY
#define RTE_ETH_RX_OFFLOAD_KEEP_CRC		 DEV_RX_OFFLOAD_KEEP_CRC
#define RTE_ETH_RX_OFFLOAD_SCTP_CKSUM	   DEV_RX_OFFLOAD_SCTP_CKSUM
#define RTE_ETH_RX_OFFLOAD_OUTER_UDP_CKSUM  DEV_RX_OFFLOAD_OUTER_UDP_CKSUM
#define RTE_ETH_RX_OFFLOAD_RSS_HASH		 DEV_RX_OFFLOAD_RSS_HASH


#define RTE_ETH_TX_OFFLOAD_VLAN_INSERT	  DEV_TX_OFFLOAD_VLAN_INSERT
#define RTE_ETH_TX_OFFLOAD_IPV4_CKSUM	   DEV_TX_OFFLOAD_IPV4_CKSUM
#define RTE_ETH_TX_OFFLOAD_UDP_CKSUM		DEV_TX_OFFLOAD_UDP_CKSUM
#define RTE_ETH_TX_OFFLOAD_TCP_CKSUM		DEV_TX_OFFLOAD_TCP_CKSUM
#define RTE_ETH_TX_OFFLOAD_SCTP_CKSUM	   DEV_TX_OFFLOAD_SCTP_CKSUM
#define RTE_ETH_TX_OFFLOAD_TCP_TSO		  DEV_TX_OFFLOAD_TCP_TSO
#define RTE_ETH_TX_OFFLOAD_UDP_TSO		  DEV_TX_OFFLOAD_UDP_TSO
#define RTE_ETH_TX_OFFLOAD_OUTER_IPV4_CKSUM DEV_TX_OFFLOAD_OUTER_IPV4_CKSUM
#define RTE_ETH_TX_OFFLOAD_QINQ_INSERT	  DEV_TX_OFFLOAD_QINQ_INSERT
#define RTE_ETH_TX_OFFLOAD_VXLAN_TNL_TSO	DEV_TX_OFFLOAD_VXLAN_TNL_TSO
#define RTE_ETH_TX_OFFLOAD_GRE_TNL_TSO	  DEV_TX_OFFLOAD_GRE_TNL_TSO
#define RTE_ETH_TX_OFFLOAD_IPIP_TNL_TSO	 DEV_TX_OFFLOAD_IPIP_TNL_TSO
#define RTE_ETH_TX_OFFLOAD_GENEVE_TNL_TSO   DEV_TX_OFFLOAD_GENEVE_TNL_TSO
#define RTE_ETH_TX_OFFLOAD_MACSEC_INSERT	DEV_TX_OFFLOAD_MACSEC_INSERT
#define RTE_ETH_TX_OFFLOAD_MT_LOCKFREE	  DEV_TX_OFFLOAD_MT_LOCKFREE
#define RTE_ETH_TX_OFFLOAD_MULTI_SEGS	   DEV_TX_OFFLOAD_MULTI_SEGS
#define RTE_ETH_TX_OFFLOAD_MBUF_FAST_FREE   DEV_TX_OFFLOAD_MBUF_FAST_FREE
#define RTE_ETH_TX_OFFLOAD_SECURITY		 DEV_TX_OFFLOAD_SECURITY
#define RTE_ETH_TX_OFFLOAD_UDP_TNL_TSO	  DEV_TX_OFFLOAD_UDP_TNL_TSO
#define RTE_ETH_TX_OFFLOAD_IP_TNL_TSO	   DEV_TX_OFFLOAD_IP_TNL_TSO
#define RTE_ETH_TX_OFFLOAD_OUTER_UDP_CKSUM  DEV_TX_OFFLOAD_OUTER_UDP_CKSUM
#define RTE_ETH_TX_OFFLOAD_SEND_ON_TIMESTAMP DEV_TX_OFFLOAD_SEND_ON_TIMESTAMP


#define RTE_ETH_LINK_SPEED_AUTONEG	  ETH_LINK_SPEED_AUTONEG
#define RTE_ETH_LINK_SPEED_FIXED		ETH_LINK_SPEED_FIXED
#define RTE_ETH_LINK_SPEED_1G		   ETH_LINK_SPEED_1G
#define RTE_ETH_LINK_SPEED_10G		  ETH_LINK_SPEED_10G

#define RTE_ETH_SPEED_NUM_NONE		  ETH_SPEED_NUM_NONE
#define RTE_ETH_SPEED_NUM_1G			ETH_SPEED_NUM_1G
#define RTE_ETH_SPEED_NUM_10G		   ETH_SPEED_NUM_10G
#define RTE_ETH_SPEED_NUM_UNKNOWN	   ETH_SPEED_NUM_UNKNOWN


#define RTE_ETH_LINK_HALF_DUPLEX		ETH_LINK_HALF_DUPLEX
#define RTE_ETH_LINK_FULL_DUPLEX		ETH_LINK_FULL_DUPLEX
#define RTE_ETH_LINK_DOWN			   ETH_LINK_DOWN
#define RTE_ETH_LINK_UP				 ETH_LINK_UP


#define RTE_ETH_RSS_RETA_SIZE_128	   ETH_RSS_RETA_SIZE_128
#define RTE_ETH_RETA_GROUP_SIZE		 RTE_RETA_GROUP_SIZE

#define RTE_ETH_VMDQ_MAX_VLAN_FILTERS   ETH_VMDQ_MAX_VLAN_FILTERS
#define RTE_ETH_DCB_NUM_USER_PRIORITIES ETH_DCB_NUM_USER_PRIORITIES
#define RTE_ETH_VMDQ_DCB_NUM_QUEUES	 ETH_VMDQ_DCB_NUM_QUEUES
#define RTE_ETH_DCB_NUM_QUEUES		  ETH_DCB_NUM_QUEUES

#define RTE_ETH_DCB_PFC_SUPPORT	 ETH_DCB_PFC_SUPPORT


#define RTE_ETH_VLAN_STRIP_OFFLOAD   ETH_VLAN_STRIP_OFFLOAD
#define RTE_ETH_VLAN_FILTER_OFFLOAD  ETH_VLAN_FILTER_OFFLOAD
#define RTE_ETH_VLAN_EXTEND_OFFLOAD  ETH_VLAN_EXTEND_OFFLOAD
#define RTE_ETH_QINQ_STRIP_OFFLOAD   ETH_QINQ_STRIP_OFFLOAD

#define RTE_ETH_VLAN_STRIP_MASK	  ETH_VLAN_STRIP_MASK
#define RTE_ETH_VLAN_FILTER_MASK	 ETH_VLAN_FILTER_MASK
#define RTE_ETH_VLAN_EXTEND_MASK	 ETH_VLAN_EXTEND_MASK
#define RTE_ETH_QINQ_STRIP_MASK	  ETH_QINQ_STRIP_MASK
#define RTE_ETH_VLAN_ID_MAX		  ETH_VLAN_ID_MAX


#define RTE_ETH_NUM_RECEIVE_MAC_ADDR   ETH_NUM_RECEIVE_MAC_ADDR
#define RTE_ETH_VMDQ_NUM_UC_HASH_ARRAY ETH_VMDQ_NUM_UC_HASH_ARRAY

#define RTE_ETH_VMDQ_ACCEPT_UNTAG	  ETH_VMDQ_ACCEPT_UNTAG
#define RTE_ETH_VMDQ_ACCEPT_HASH_MC	ETH_VMDQ_ACCEPT_HASH_MC
#define RTE_ETH_VMDQ_ACCEPT_HASH_UC	ETH_VMDQ_ACCEPT_HASH_UC
#define RTE_ETH_VMDQ_ACCEPT_BROADCAST  ETH_VMDQ_ACCEPT_BROADCAST
#define RTE_ETH_VMDQ_ACCEPT_MULTICAST  ETH_VMDQ_ACCEPT_MULTICAST

#define RTE_VLAN_HLEN	   4

#define RTE_MBUF_F_RX_VLAN				  PKT_RX_VLAN
#define RTE_MBUF_F_RX_RSS_HASH			  PKT_RX_RSS_HASH
#define RTE_MBUF_F_RX_FDIR				  PKT_RX_FDIR
#define RTE_MBUF_F_RX_OUTER_IP_CKSUM_BAD	PKT_RX_EIP_CKSUM_BAD
#define RTE_MBUF_F_RX_VLAN_STRIPPED		 PKT_RX_VLAN_STRIPPED
#define RTE_MBUF_F_RX_IP_CKSUM_MASK		 PKT_RX_IP_CKSUM_MASK
#define RTE_MBUF_F_RX_IP_CKSUM_UNKNOWN	  PKT_RX_IP_CKSUM_UNKNOWN
#define RTE_MBUF_F_RX_IP_CKSUM_BAD		  PKT_RX_IP_CKSUM_BAD
#define RTE_MBUF_F_RX_IP_CKSUM_GOOD		 PKT_RX_IP_CKSUM_GOOD
#define RTE_MBUF_F_RX_IP_CKSUM_NONE		 PKT_RX_IP_CKSUM_NONE
#define RTE_MBUF_F_RX_L4_CKSUM_MASK		 PKT_RX_L4_CKSUM_MASK
#define RTE_MBUF_F_RX_L4_CKSUM_UNKNOWN	  PKT_RX_L4_CKSUM_UNKNOWN
#define RTE_MBUF_F_RX_L4_CKSUM_BAD		  PKT_RX_L4_CKSUM_BAD
#define RTE_MBUF_F_RX_L4_CKSUM_GOOD		 PKT_RX_L4_CKSUM_GOOD
#define RTE_MBUF_F_RX_L4_CKSUM_NONE		 PKT_RX_L4_CKSUM_NONE
#define RTE_MBUF_F_RX_IEEE1588_PTP		  PKT_RX_IEEE1588_PTP
#define RTE_MBUF_F_RX_IEEE1588_TMST		 PKT_RX_IEEE1588_TMST
#define RTE_MBUF_F_RX_FDIR_ID			   PKT_RX_FDIR_ID
#define RTE_MBUF_F_RX_FDIR_FLX			  PKT_RX_FDIR_FLX
#define RTE_MBUF_F_RX_QINQ_STRIPPED		 PKT_RX_QINQ_STRIPPED
#define RTE_MBUF_F_RX_LRO				   PKT_RX_LRO
#define RTE_MBUF_F_RX_SEC_OFFLOAD			PKT_RX_SEC_OFFLOAD
#define RTE_MBUF_F_RX_SEC_OFFLOAD_FAILED	PKT_RX_SEC_OFFLOAD_FAILED
#define RTE_MBUF_F_RX_QINQ				  PKT_RX_QINQ

#define RTE_MBUF_F_TX_SEC_OFFLOAD			PKT_TX_SEC_OFFLOAD
#define RTE_MBUF_F_TX_MACSEC				PKT_TX_MACSEC
#define RTE_MBUF_F_TX_QINQ				  PKT_TX_QINQ
#define RTE_MBUF_F_TX_TCP_SEG			   PKT_TX_TCP_SEG
#define RTE_MBUF_F_TX_IEEE1588_TMST		 PKT_TX_IEEE1588_TMST
#define RTE_MBUF_F_TX_L4_NO_CKSUM		   PKT_TX_L4_NO_CKSUM
#define RTE_MBUF_F_TX_TCP_CKSUM			 PKT_TX_TCP_CKSUM
#define RTE_MBUF_F_TX_SCTP_CKSUM			PKT_TX_SCTP_CKSUM
#define RTE_MBUF_F_TX_UDP_CKSUM			 PKT_TX_UDP_CKSUM
#define RTE_MBUF_F_TX_L4_MASK			   PKT_TX_L4_MASK
#define RTE_MBUF_F_TX_IP_CKSUM			  PKT_TX_IP_CKSUM
#define RTE_MBUF_F_TX_IPV4				  PKT_TX_IPV4
#define RTE_MBUF_F_TX_IPV6				  PKT_TX_IPV6
#define RTE_MBUF_F_TX_VLAN				  PKT_TX_VLAN
#define RTE_MBUF_F_TX_OUTER_IP_CKSUM		PKT_TX_OUTER_IP_CKSUM
#define RTE_MBUF_F_TX_OUTER_IPV4			PKT_TX_OUTER_IPV4
#define RTE_MBUF_F_TX_OUTER_IPV6			PKT_TX_OUTER_IPV6

#define RTE_MBUF_F_TX_OFFLOAD_MASK		  PKT_TX_OFFLOAD_MASK

#define RTE_ETH_8_POOLS					 ETH_8_POOLS
#define RTE_ETH_16_POOLS					ETH_16_POOLS
#define RTE_ETH_32_POOLS					ETH_32_POOLS
#define RTE_ETH_64_POOLS					ETH_64_POOLS

#ifdef RTE_LIBRTE_ETHDEV_DEBUG
#define RTE_ETHDEV_DEBUG_RX
#define RTE_ETHDEV_DEBUG_TX
#endif

#endif

#if defined DPDK_20_11_5 || defined DPDK_19_11_6
#define rte_eth_fdir_pballoc_type   rte_fdir_pballoc_type
#define rte_eth_fdir_conf			rte_fdir_conf

#define RTE_ETH_FDIR_PBALLOC_64K   RTE_FDIR_PBALLOC_64K
#define RTE_ETH_FDIR_PBALLOC_128K  RTE_FDIR_PBALLOC_128K
#define RTE_ETH_FDIR_PBALLOC_256K  RTE_FDIR_PBALLOC_256K
#endif

#if defined DPDK_20_11_5 || defined DPDK_19_11_6

#define SXE_PCI_INTR_HANDLE(pci_dev) \
	(&((pci_dev)->intr_handle))

#define SXE_DEV_FNAV_CONF(dev) \
	(&((dev)->data->dev_conf.fdir_conf))
#define SXE_GET_FRAME_SIZE(dev) \
	((dev)->data->dev_conf.rxmode.max_rx_pkt_len)

#elif defined DPDK_21_11_5
#define SXE_PCI_INTR_HANDLE(pci_dev) \
	((pci_dev)->intr_handle)
#define SXE_DEV_FNAV_CONF(dev) \
	(&((dev)->data->dev_conf.fdir_conf))
#define SXE_GET_FRAME_SIZE(dev) \
	((dev)->data->mtu + SXE_ETH_OVERHEAD)

#else
#define SXE_PCI_INTR_HANDLE(pci_dev) \
	((pci_dev)->intr_handle)
#define SXE_DEV_FNAV_CONF(dev) \
	(&((struct sxe_adapter *)(dev)->data->dev_private)->fnav_conf)
#define RTE_ADAPTER_HAVE_FNAV_CONF
#define SXE_GET_FRAME_SIZE(dev) \
	((dev)->data->mtu + SXE_ETH_OVERHEAD)

#endif

#if defined DPDK_20_11_5 || defined DPDK_19_11_6
#define ETH_DEV_OPS_FILTER_CTRL
#define DEV_RX_JUMBO_FRAME
#define ETH_DEV_MIRROR_RULE
#define ETH_DEV_RX_DESC_DONE
#else
#define ETH_DEV_OPS_MONITOR
#endif

#if defined DPDK_22_11_3 || defined DPDK_23_11_3 || defined DPDK_24_11_1
#define DEV_RX_OFFLOAD_CHECKSUM RTE_ETH_RX_OFFLOAD_CHECKSUM
#define ETH_DCB_NUM_USER_PRIORITIES RTE_ETH_DCB_NUM_USER_PRIORITIES
#endif

#endif
